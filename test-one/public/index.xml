<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Life Universe and Everything</title>
    <link>https://eateshk.github.io/</link>
    <description>Recent content on Life Universe and Everything</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018. All rights reserved.</copyright>
    <lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://eateshk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://eateshk.github.io/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://eateshk.github.io/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Elastic Search Cluster Setup from Binary</title>
      <link>https://eateshk.github.io/post/es_cluster_from_binary/</link>
      <pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/post/es_cluster_from_binary/</guid>
      <description>Preparation Step 1 Get an ubuntu box - you can find version compatibility
On Azure Using ubuntu 16.04 LTS 1) Create a machine with public ip(master node) 2) Create other machines (data/ingest nodes w/o public IP)  Step 2 Install Oracle Java. Compatibility matrix in same link as above. &amp;gt; sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade &amp;gt; sudo apt-get install software-properties-common &amp;gt; sudo add-apt-repository ppa:linuxuprising/java &amp;gt; sudo apt-get update &amp;gt; sudo add-apt-repository ppa:webupd8team/java &amp;gt; sudo apt-get update &amp;gt; sudo apt-get install oracle-java8-installer</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://eateshk.github.io/about/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/about/</guid>
      <description>I&amp;rsquo;m a generalist software developer who loves programming / design &amp;amp; analysis of algorithms. I&amp;rsquo;ve worked in many projects mostly around writing services and I&amp;rsquo;m currently working in Microsoft IDC, Bengaluru. I&amp;rsquo;m generally interested in sports, programming and wasting time thinking about random stuff but what I end up doing mostly is procrastination(you&amp;rsquo;ll see soon) for some reason :)
I started and stopped a blog in college - couldn&amp;rsquo;t manage it (you see it now).</description>
    </item>
    
    <item>
      <title>Scala Setup</title>
      <link>https://eateshk.github.io/post/scala_setup/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/post/scala_setup/</guid>
      <description>Preparation Step 1 - Java Installation Since scala runs on JVM we need java, it&amp;rsquo;s a good idea to install whole of jdk with it. Issuing command below will bring both JRE and Java to your machine.
sudo apt-get install openjdk-8-jdk
Step 2 - Download Scala You can get scala from Scala website - Go to https://www.scala-lang.org/download/. Scroll down the page and get a debian package, with extension as .</description>
    </item>
    
    <item>
      <title>Mfp</title>
      <link>https://eateshk.github.io/post/mfp/</link>
      <pubDate>Thu, 22 Nov 2018 20:06:08 +0530</pubDate>
      
      <guid>https://eateshk.github.io/post/mfp/</guid>
      <description>this is a header :) Write something here dude !</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://eateshk.github.io/contact/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/contact/</guid>
      <description> First Name  Last Name  E-Mail  City  State AL CA IL      Send   </description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://eateshk.github.io/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://eateshk.github.io/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eateshk.github.io/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>